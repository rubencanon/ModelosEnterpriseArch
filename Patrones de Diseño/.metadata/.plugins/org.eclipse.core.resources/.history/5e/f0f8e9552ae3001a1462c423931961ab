public class WorkshopSimulator {
	public static void main(String[] args) {
		Workshop workshop = new Workshop();
		new Vehicle("Vehicle1", workshop);
		new Vehicle("Vehicle2", workshop);
		new Vehicle("Vehicle3", workshop);
		new Vehicle("Vehicle4", workshop);
		new Vehicle("Vehicle5", workshop);
		new Vehicle("Vehicle6", workshop);
		new Vehicle("Vehicle7", workshop);
		new Vehicle("Vehicle8", workshop);
				
	}

}

class Workshop {
	// Assume 4 parking slots for simplicity
	public static final int MAX_CAPACITY = 5; // Cupo Máximo del Taller
	private int inspectingCarsTotal = 0;    // Numero Total de Vehículos en Revisión

	public synchronized void inspect(String vehicle) {
		while (inspectingCarsTotal >= MAX_CAPACITY) {
			try {
				System.out.println(" The workshop is full " + vehicle + " has to wait ");
				wait();
			} catch (InterruptedException e) {
				//
			}
		}
		// precondition is true
		System.out.println(vehicle + " is in inspection");
		inspectingCarsTotal = inspectingCarsTotal + 1;
		try {
			sleep(800); //tiempo de inspeccion simulada 800ms
		} catch (InterruptedException e) {
			//
		}
	}

	public synchronized void leave(String vehicle) {
		inspectingCarsTotal = inspectingCarsTotal - 1;
		System.out.println(vehicle + " has left, notify a waiting vehicle");
		notify();
	}
}

class Vehicle extends Thread {
	private Workshop workshop;
	private String name;

	Vehicle(String n, Workshop w) {
		name = n;
		workshop = w;
		start();
	}

	public void run() {
		System.out.println(name + " is ready to be Inspected");
		workshop.inspect(name);

		workshop.leave(name);
	}
}
